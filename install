#!/bin/bash
###########################################################################################################
# POP-Java installation script
# Date : 06/22/2010
# Author : Clement Valentin
# Updates (please write any modifications to this file in the following lines)
# Date				Author			Description
# 06/29/2010	clementval	Modifying Java detection and adding rights when installing in default directory
###########################################################################################################

#POP-Java installation script
PREFIX="[POP-Java installation]:"




####################################################
# STEP 1 : Detecting Java executable
####################################################

echo "$PREFIX Detecting java executable ..."
JAVA_PROGRAM=$(which java)
if [ $JAVA_PROGRAM ]
then
	echo "$PREFIX Java executable detected under $JAVA_PROGRAM"
else
	echo "Java executable not found. If you have Java installed please give the path of java executable ..."
	read JAVA_PROGRAM
	if [ JAVA_PROGRAM ]
	then
		"Java executable under $JAVA_PROGRAM"
	else
		exit		
	fi
fi


####################################################
# STEP 2 : Get POP-Java installation directory
####################################################

#Installation directory
echo "$PREFIX Please enter the location of your desired POP-Java installation (default: /usr/local/popj ) : "
read LOCATION



#Setting the default directory if no directory entered by the user
#Removing the last / if the user enter a specific directory
if [ "$LOCATION" == "" ]
then
	LOCATION="/usr/local/popj"
else 
	LOCATION=${LOCATION%/}
fi


####################################################
# STEP 3 : Get user confirmation
####################################################
#Confirmation 
CONFIRM=""
while [ "$CONFIRM" != "y" ] || [ "$CONFIRM" != "n" ]
do
	echo "$PREFIX Installing POP-Java under $LOCATION ? (y/n)"
	read CONFIRM
	if [ "$CONFIRM" == "y"  -o "$CONFIRM" == "n" ]
	then 
		break
	fi
done

if [ "$CONFIRM" == "n" ]
then
	echo "$PREFIX Installation aborted by user"
	exit
fi

####################################################
# STEP 4 : Check POP-C++ installation
####################################################

#check the popc installation
if [ "$POPC_LOCATION" == "" ]
then
	POPC="/usr/local/popc"
	if [ ! -d $POPC ]
	then
		echo "$PREFIX Installation cannot find the POP-C++ installation directry. You need POP-C++ installed to use POP-Java"
		echo "$PREFIX If you have POP-C++ installed, please give your POP-C++ installation directory : "
		read POPC
		POPC=${POPC%/}
		if [ ! -d $POPC ]
		then
			echo "$PREFIX Your POP-C++ installation directory does not exist. Installation aborted"
			exit
		fi
	fi
else
	POPC=$POPC_LOCATION	
fi

####################################################
# STEP 5 : Copying files 
####################################################
mkdir -p $LOCATION

if [ -w $LOCATION ]
then
	
	#copying files
	echo "$PREFIX Copying files ..."
	mkdir $LOCATION/bin
	cp -r doc $LOCATION
	cp -r etc $LOCATION
	cp -r JarFile $LOCATION
	cp popjavac/popjparser/popjparser.jar $LOCATION/JarFile
	cp popjavac/popjobjectmapgen.jar $LOCATION/JarFile
	cp popjavac/popjc $LOCATION/bin
	cp popjavac/popjrun $LOCATION/bin
	cp popjavac/xml/additional-parser-infos.xsd $LOCATION/etc
	cp -r javassist $LOCATION
	mkdir $LOCATION/logFolder
	cp -r plugin $LOCATION
	cp -r popjava $LOCATION
	cp -r testsuite $LOCATION
	cp launch_testsuite $LOCATION


####################################################
# STEP 6 : Change rights on specific files
####################################################

	chmod -R 775 $LOCATION/etc
	chmod -R 775 $LOCATION/plugin
	chmod 777 $LOCATION/logFolder
	chmod -R 777 $LOCATION/JarFile
	chmod 755 $LOCATION/popjava/*
	chmod 755 $LOCATION/javassist
	chmod 755 $LOCATION/javassist/*
	chmod 755 $LOCATION/javassist/util
	chmod 755 $LOCATION/javassist/util/*
	chmod -R 777 $LOCATION/testsuite
	chmod 755 $LOCATION/launch_testsuite

####################################################
# STEP 7 : Generating XML files
####################################################
	
	echo "$PREFIX Generating configuration files ..."
	CONFIG_FILE=$LOCATION/etc/popj_config.xml	
	#generating config files
	echo "<!-- POP-Java configuration file generated by the installation script. This file should not be modified after the installation of POP-Java on your computer -->" > $CONFIG_FILE
	echo "<POPJConfig>" >> $CONFIG_FILE
	echo "<item name='popj_location'>$LOCATION</item>" >> $CONFIG_FILE
	echo "<item name='popj_plugin_location'>$LOCATION/plugin</item>" >> $CONFIG_FILE
	echo "<item name='popc_appcoreservice_location'>$POPC/services/appservice</item>" >> $CONFIG_FILE
	echo "<item name='popj_broker_command'>$JAVA_PROGRAM -cp %s popjava.broker.Broker -codelocation=</item>" >> $CONFIG_FILE
	echo "</POPJConfig>" >> $CONFIG_FILE
	

	#genrating object map file for test suite

	#generating platform name for object map
	HARDWARE=$(uname -m)
	OS=$(uname)
	PLATFORM="$HARDWARE-pc-$OS"
	
	OBJECT_MAP=$LOCATION/etc/defaultobjectmap.xml
	echo "$PREFIX Generating object map file for the test suite"
	echo "<!-- POP-Java test suite object map generated by the installation script. This file sould not be modified -->" > $OBJECT_MAP
	echo "<CodeInfoList>" >> $OBJECT_MAP

	#Object map for POPC object test
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>Integer</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile>$LOCATION/testsuite/popc-obj/integer/integer.obj</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>$PLATFORM</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP

	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>Integer2</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile>$LOCATION/testsuite/popc-obj/jinteger/integer.obj</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>$PLATFORM</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP

	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.jinteger.Jinteger</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	#		
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.barrier.Barrier</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.demo.Demopop</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.popjavatest.POPJParclass</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.barrier.Worker</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.jobmgr.ParClass</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.arg.MyPOPObject</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.callback.Titi</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.callback.Toto</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.integer.Integer</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.multiobj.MyObj1</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.multiobj.MyObj2</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.multiobj.MyObj3</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.multiobj.MyObj4</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.method.MethodObj</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
   echo "<CodeInfo>" >> $OBJECT_MAP
	echo "<ObjectName>testsuite.od.ParObj</ObjectName>" >> $OBJECT_MAP
	echo "<CodeFile Type='popjava'>$LOCATION/JarFile/testsuite.jar</CodeFile>" >> $OBJECT_MAP
	echo "<PlatForm>*-*</PlatForm>" >> $OBJECT_MAP
	echo "</CodeInfo>" >> $OBJECT_MAP
	echo "</CodeInfoList>" >> $OBJECT_MAP


	#Installation end. Displaying new environement variable to set in .bahsrc
	echo "$PREFIX POP-Java has been installed under $LOCATION. Please copy the following lines into your .bashrc files or equivalent"
	echo ""
	echo "POPJAVA_LOCATION=$LOCATION"
	echo "export POPJAVA_LOCATION"
	echo "POPJAVA_JAVA=$JAVA_PROGRAM"
	echo "export POPJAVA_JAVA"
	echo "PATH=\$PATH:\$POPJAVA_LOCATION/bin"
	echo ""
	echo "$PREFIX Installation done."
else
	echo "$PREFIX Installation aborted. You don't have the permission to write in the installation directory. Try to run the installation with the 'sudo -E' command"
fi

